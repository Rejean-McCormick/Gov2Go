# Logstash Configuration File: logstash.conf

# 1. Define input sources
input {
  file {
    path => "/var/log/system.log"
    start_position => "beginning"
    type => "system_logs"
    codec => "plain"
  }
  syslog {
    port => 514
    type => "syslog"
    codec => "plain"
  }
  tcp {
    port => 5000
    type => "application_logs"
    codec => "json"
  }
}

# 2. Configure data filters
filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:host} %{DATA:appname}: %{GREEDYDATA:message}" }
    }
    date {
      match => [ "timestamp", "MMM d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }

  if [type] == "system_logs" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} %{GREEDYDATA:message}" }
    }
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }

  if [type] == "application_logs" {
    json {
      source => "message"
    }
  }

  mutate {
    remove_field => [ "host" ]
  }
}

# 3. Set up output to Elasticsearch
output {
  if [type] == "syslog" {
    elasticsearch {
      hosts => ["https://elasticsearch-cluster:9200"]
      index => "syslog-%{+YYYY.MM.dd}"
      document_type => "_doc"
      user => "elastic"
      password => "your-password"
      ssl => true
      cacert => "/etc/logstash/certs/ca.crt"
    }
  }
  
  if [type] == "system_logs" {
    elasticsearch {
      hosts => ["https://elasticsearch-cluster:9200"]
      index => "system-logs-%{+YYYY.MM.dd}"
      document_type => "_doc"
      user => "elastic"
      password => "your-password"
      ssl => true
      cacert => "/etc/logstash/certs/ca.crt"
    }
  }

  if [type] == "application_logs" {
    elasticsearch {
      hosts => ["https://elasticsearch-cluster:9200"]
      index => "app-logs-%{+YYYY.MM.dd}"
      document_type => "_doc"
      user => "elastic"
      password => "your-password"
      ssl => true
      cacert => "/etc/logstash/certs/ca.crt"
    }
  }
  
  # 5. Handle error scenarios (e.g., Grok parsing failures)
  if "_grokparsefailure" in [tags] {
    file {
      path => "/var/log/logstash/grok_failures.log"
    }
  }
}

# 6. Optimize performance settings
pipeline {
  batch {
    size => 125
    delay => 50
  }
  workers => 4
}

# 7. Monitor log ingestion and processing
monitoring.enabled: true

# Security: Ensure encrypted communication and authentication
ssl {
  enable => true
  certificate_authorities => ["/etc/logstash/certs/ca.crt"]
}
 
